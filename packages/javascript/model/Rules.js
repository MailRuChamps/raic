const Arena = require("./Arena");

class Rules {
  constructor({
    max_tick_count,
    arena,
    team_size,
    seed,
    ROBOT_MIN_RADIUS,
    ROBOT_MAX_RADIUS,
    ROBOT_MAX_JUMP_SPEED,
    ROBOT_ACCELERATION,
    ROBOT_NITRO_ACCELERATION,
    ROBOT_MAX_GROUND_SPEED,
    ROBOT_ARENA_E,
    ROBOT_RADIUS,
    ROBOT_MASS,
    TICKS_PER_SECOND,
    MICROTICKS_PER_TICK,
    RESET_TICKS,
    BALL_ARENA_E,
    BALL_RADIUS,
    BALL_MASS,
    MIN_HIT_E,
    MAX_HIT_E,
    MAX_ENTITY_SPEED,
    MAX_NITRO_AMOUNT,
    START_NITRO_AMOUNT,
    NITRO_POINT_VELOCITY_CHANGE,
    NITRO_PACK_X,
    NITRO_PACK_Y,
    NITRO_PACK_Z,
    NITRO_PACK_RADIUS,
    NITRO_PACK_AMOUNT,
    NITRO_PACK_RESPAWN_TICKS,
    GRAVITY
  }) {
    this.max_tick_count = max_tick_count;
    this.arena = new Arena(arena);
    this.team_size = team_size;
    this.seed = seed;
    this.ROBOT_MIN_RADIUS = ROBOT_MIN_RADIUS;
    this.ROBOT_MAX_RADIUS = ROBOT_MAX_RADIUS;
    this.ROBOT_MAX_JUMP_SPEED = ROBOT_MAX_JUMP_SPEED;
    this.ROBOT_ACCELERATION = ROBOT_ACCELERATION;
    this.ROBOT_NITRO_ACCELERATION = ROBOT_NITRO_ACCELERATION;
    this.ROBOT_MAX_GROUND_SPEED = ROBOT_MAX_GROUND_SPEED;
    this.ROBOT_ARENA_E = ROBOT_ARENA_E;
    this.ROBOT_RADIUS = ROBOT_RADIUS;
    this.ROBOT_MASS = ROBOT_MASS;
    this.TICKS_PER_SECOND = TICKS_PER_SECOND;
    this.MICROTICKS_PER_TICK = MICROTICKS_PER_TICK;
    this.RESET_TICKS = RESET_TICKS;
    this.BALL_ARENA_E = BALL_ARENA_E;
    this.BALL_RADIUS = BALL_RADIUS;
    this.BALL_MASS = BALL_MASS;
    this.MIN_HIT_E = MIN_HIT_E;
    this.MAX_HIT_E = MAX_HIT_E;
    this.MAX_ENTITY_SPEED = MAX_ENTITY_SPEED;
    this.MAX_NITRO_AMOUNT = MAX_NITRO_AMOUNT;
    this.START_NITRO_AMOUNT = START_NITRO_AMOUNT;
    this.NITRO_POINT_VELOCITY_CHANGE = NITRO_POINT_VELOCITY_CHANGE;
    this.NITRO_PACK_X = NITRO_PACK_X;
    this.NITRO_PACK_Y = NITRO_PACK_Y;
    this.NITRO_PACK_Z = NITRO_PACK_Z;
    this.NITRO_PACK_RADIUS = NITRO_PACK_RADIUS;
    this.NITRO_PACK_AMOUNT = NITRO_PACK_AMOUNT;
    this.NITRO_PACK_RESPAWN_TICKS = NITRO_PACK_RESPAWN_TICKS;
    this.GRAVITY = GRAVITY;
  }
}
module.exports = Rules;
